apply plugin: 'java-library'
apply plugin: 'scala'
apply plugin: "maven"
apply plugin: 'antlr'
apply plugin: 'eclipse'

sourceCompatibility = 1.8
targetCompatibility = 1.8

//project.defaultTasks = ["uploadArchives"]
project.buildDir = 'target/MAVEN'
project.group = "org.sievos.lex-lang"
project.version = sievosVersion

repositories {
    jcenter()
    mavenCentral()
    mavenLocal()
}

compileJava.dependsOn generateGrammarSource

sourceSets {
 main {
  java {
     srcDir rootProject.ext.GEN_SOURCES_DIR
  }
 }
}


eclipse.classpath {
    defaultOutputDir = file(rootProject.ext.BUILD_CLASSES_DIR)
}

sourceSets {
  generated {
    java { srcDirs = [
        rootProject.ext.GEN_SOURCES_DIR
      ] }
    compileClasspath += sourceSets.main.output
  }
}

dependencies {

//    api 'org.apache.commons:commons-math3:3.6.1'
//    implementation 'com.google.guava:guava:21.0'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'

    compile 'org.slf4j:slf4j-api:1.7.5'
    compile 'org.scala-lang:scala-library:2.12.3'
    compile 'org.antlr:antlr4-maven-plugin:4.5.3'
    
    testCompile "junit:junit:4.11"
    
   // Here we set the version of ANTLR we want to use
    antlr 'org.antlr:antlr4:4.7'
   
}

// Generates antlr visitor classes
generateGrammarSource {
    arguments += ["-visitor"]
    arguments += ["-package", "org.sievos.lex"]
    outputDirectory = file(rootProject.ext.GEN_SOURCES_DIR)
}

/*
task run(type: JavaExec, dependsOn: classes) {
    main = 'Main'
    classpath sourceSets.main.runtimeClasspath
    classpath configurations.runtime
}
*/
